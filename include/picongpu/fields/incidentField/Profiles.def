/* Copyright 2020-2021 Sergei Bastrakov
 *
 * This file is part of PIConGPU.
 *
 * PIConGPU is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * PIConGPU is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with PIConGPU.
 * If not, see <http://www.gnu.org/licenses/>.
 */

#pragma once


namespace picongpu
{
    namespace fields
    {
        namespace incidentField
        {
            //! No incident field at a boundary
            struct None;

            /** Incident field source at a boundary
             *
             * @tparam T_FunctorIncidentE functor for the incident E field, follows the interface of
             *                            FunctorIncidentFieldConcept (defined in .hpp file)
             * @tparam T_FunctorIncidentB functor for the incident B field, follows the interface of
             *                            FunctorIncidentFieldConcept (defined in .hpp file)
             */
            template<typename T_FunctorIncidentE, typename T_FunctorIncidentB>
            struct Source;

        } // namespace incidentField
    } // namespace fields
} // namespace picongpu
